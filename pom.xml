<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>uk.ac.ebi.spot.ontotools</groupId>
    <artifactId>ontotools-curation-service</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>

    <name>OntoTools Curation Service</name>

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
        <relativePath/>
    </parent>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <start-class>uk.ac.ebi.spot.ontotools.curation.Application</start-class>

        <spring.boot.version>2.4.2</spring.boot.version>
        <spring.test>5.3.3</spring.test>
        <javax.servlet>4.0.1</javax.servlet>
        <javax.validation>2.0.1.Final</javax.validation>

        <joda.time>2.10.9</joda.time>
        <lombok.version>1.18.18</lombok.version>
        <commons.collections>4.4</commons.collections>
        <commons.fileupload>1.4</commons.fileupload>
        <commons.io>2.8.0</commons.io>
        <commons.lang3>3.11</commons.lang3>
        <httpclient.version>4.5.13</httpclient.version>
        <jjwt.version>0.9.1</jjwt.version>
        <hamcrest.core>1.3</hamcrest.core>
        <logback.classic>1.2.3</logback.classic>
        <ognl.version>3.2.18</ognl.version>
        <junit.version>4.13.1</junit.version>
        <mockito.core>3.7.7</mockito.core>
        <equalsverifier.version>3.5.2</equalsverifier.version>

        <jacoco.plugin.version>0.8.6</jacoco.plugin.version>
        <skip.coverage>false</skip.coverage>

        <coverage.ratio.instruction>0.7000</coverage.ratio.instruction>
        <coverage.ratio.branch>0.7000</coverage.ratio.branch>
        <coverage.ratio.method>0.7500</coverage.ratio.method>
        <coverage.ratio.complexity>0.7000</coverage.ratio.complexity>
        <coverage.ratio.line>0.7000</coverage.ratio.line>
        <coverage.ratio.class>0.9000</coverage.ratio.class>
    </properties>

    <scm>
        <connection>scm:git:https://github.com/EBISPOT/ontotools-curator.git</connection>
        <developerConnection>scm:git:https://github.com/EBISPOT/ontotools-curator.git</developerConnection>
        <url>https://github.com/EBISPOT/ontotools-curator.git</url>
    </scm>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.plugin.version}</version>
                <configuration>
                    <dataFile>${project.build.directory}/coverage-reports/jacoco.exec</dataFile>
                    <outputDirectory>${project.build.directory}/coverage-reports/</outputDirectory>
                    <skip>true</skip>
                    <excludes>
                        <exclude>**/*Config.*</exclude>
                        <exclude>**/*ConfigProd.*</exclude>
                        <exclude>**/*Application.*</exclude>
                        <exclude>**/*ConfigDev.*</exclude>
                        <exclude>**/*ConfigNonDev.*</exclude>
                        <exclude>**/*Constants.*</exclude>
                        <exclude>**/*Properties.*</exclude>
                        <exclude>**/*Exception.*</exclude>
                        <exclude>**/*Serializer.*</exclude>
                        <exclude>**/*Deserializer.*</exclude>
                        <exclude>**/constants/**/*</exclude>
                        <exclude>**/constants/*.*</exclude>
                        <exclude>**/*Advice.*</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.coverage}</skip>
                            <tasks>
                                <echo message="Creating coverage-reports output directory"/>
                                <mkdir dir="${project.build.directory}/target/coverage-reports/"/>
                            </tasks>
                            <destFile>${project.build.directory}/coverage-reports/jacoco.exec</destFile>
                        </configuration>
                    </execution>
                    <execution>
                        <id>report</id>
                        <!-- Run before maven-scr-plugin adds in the service methods -->
                        <phase>integration-test</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.coverage}</skip>
                        </configuration>
                    </execution>
                    <execution>
                        <id>check</id>
                        <!-- Run before maven-scr-plugin adds in the service methods -->
                        <phase>integration-test</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.coverage}</skip>
                            <rules>
                                <rule>
                                    <element>BUNDLE</element>
                                    <limits>
                                        <limit>
                                            <counter>INSTRUCTION</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.ratio.instruction}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>LINE</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.ratio.line}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>BRANCH</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.ratio.branch}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>METHOD</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.ratio.method}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>CLASS</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.ratio.class}</minimum>
                                        </limit>
                                        <limit>
                                            <counter>COMPLEXITY</counter>
                                            <value>COVEREDRATIO</value>
                                            <minimum>${coverage.ratio.complexity}</minimum>
                                        </limit>
                                    </limits>
                                </rule>
                            </rules>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
            <exclusions>
                <exclusion>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-starter-tomcat</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-jetty</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-test</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.data</groupId>
            <artifactId>spring-data-mongodb</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-mail</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>${httpclient.version}</version>
        </dependency>

        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>${joda.time}</version>
        </dependency>
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>${javax.servlet}</version>
        </dependency>
        <dependency>
            <groupId>javax.validation</groupId>
            <artifactId>validation-api</artifactId>
            <version>${javax.validation}</version>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <version>${lombok.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-collections4</artifactId>
            <version>${commons.collections}</version>
        </dependency>
        <dependency>
            <groupId>commons-fileupload</groupId>
            <artifactId>commons-fileupload</artifactId>
            <version>${commons.fileupload}</version>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${commons.io}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-lang3</artifactId>
            <version>${commons.lang3}</version>
        </dependency>
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt</artifactId>
            <version>${jjwt.version}</version>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>${hamcrest.core}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>${logback.classic}</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>${logback.classic}</version>
        </dependency>
        <dependency>
            <groupId>ognl</groupId>
            <artifactId>ognl</artifactId>
            <version>${ognl.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.core}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>nl.jqno.equalsverifier</groupId>
            <artifactId>equalsverifier</artifactId>
            <version>${equalsverifier.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.test}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>

</project>
